{
  "openapi": "3.0.0",
  "info": {
    "title": "VoxNet API",
    "version": "1.0.0",
    "description": "API for VoxNet telecommunications company"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombreCliente": { "type": "string" },
                  "direccion": { "type": "string" },
                  "sector": { "type": "string" },
                  "ciudad": { "type": "string" },
                  "provincia": { "type": "string" },
                  "telefonoCliente": { "type": "string" },
                  "correoCliente": { "type": "string" },
                  "cedulaCliente": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "500": { "description": "Error registering user" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "correoCliente": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Error logging in" }
        }
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "correoCliente": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset email sent" },
          "404": { "description": "User not found" },
          "500": { "description": "Error sending password reset email" }
        }
      }
    },
    "/api/auth/reset-password": {
      "put": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "newPassword": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password updated successfully" },
          "500": { "description": "Error updating password" }
        }
      }
    },
    "/api/client-portal": {
      "get": {
        "tags": ["Client Portal"],
        "summary": "Access client portal",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Access to client portal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/profile/update": {
      "put": {
        "tags": ["User Profile"],
        "summary": "Update client information",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "telefonoCliente": { "type": "string" },
                  "correoCliente": { "type": "string" },
                  "direccionCliente": { "type": "string" },
                  "newPassword": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Client information updated successfully" },
          "500": { "description": "Error updating client information" }
        }
      }
    },
    "/api/client-portal/services/subscribe": {
      "post": {
        "tags": ["Services"],
        "summary": "Subscribe to a service",
        "description": "Allows a client to subscribe to a service, setting up a contract and initializing billing.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["idServicio"],
                "properties": {
                  "idServicio": {
                    "type": "integer",
                    "description": "The ID of the service to subscribe to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/client-portal/services/subscribe-bundle": {
      "post": {
        "tags": ["Services"],
        "summary": "Subscribe to a bundle of services",
        "description": "Allows a client to subscribe to a bundle of services, setting up contracts and initializing billing.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["idServicios"],
                "properties": {
                  "idServicios": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Array of service IDs to subscribe to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription to bundle successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/client-portal/services/subscribed": {
      "get": {
        "tags": ["Services"],
        "summary": "Get subscribed services",
        "description": "Fetches all services the client is subscribed to along with their contract states.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of subscribed services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "nombreServicio": { "type": "string" },
                      "estadoContrato": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error fetching subscribed services"
          }
        }
      }
    },
    "/api/client-portal/services/get-all": {
      "get": {
        "tags": ["Services"],
        "summary": "Get all services",
        "description": "Retrieve all available services",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Services retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "idServicio": { "type": "integer" },
                          "nombreServicio": { "type": "string" },
                          "descripcionServicio": { "type": "string" },
                          "precioServicio": { "type": "number" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "No services found" },
          "500": { "description": "Server error during retrieval process" }
        }
      }
    },
    "/api/client-portal/services/update-plan": {
      "put": {
        "tags": ["Services"],
        "summary": "Update service plan",
        "description": "Allows a client to upgrade or downgrade their service plan if the current contract state allows it.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["currentIdServicio", "newIdServicio"],
                "properties": {
                  "currentIdServicio": {
                    "type": "integer",
                    "description": "The ID of the current service"
                  },
                  "newIdServicio": {
                    "type": "integer",
                    "description": "The ID of the new service to upgrade/downgrade to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service plan updated and billing details adjusted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update service plan"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/client-portal/services/cancel": {
      "delete": {
        "tags": ["Services"],
        "summary": "Cancel a service",
        "description": "Allows a client to cancel a service if the contract state is 'Activo: Al Día' or the service description contains 'NOW'.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["idServicio"],
                "properties": {
                  "idServicio": {
                    "type": "integer",
                    "description": "The ID of the service to cancel"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service canceled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to cancel service or contract state does not allow cancellation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during service cancellation process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/products/buy": {
      "post": {
        "tags": ["Products"],
        "summary": "Buy a product",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idProducto": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": ["idProducto"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto bought sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "idFactura": 1,
                    "idCliente": 1,
                    "idTipoComprobante": 1,
                    "fechaFactura": "2024-07-07T00:00:00.000Z",
                    "metodoPagoFactura": "Pendiente",
                    "impuestosFactura": 18.0,
                    "totalFactura": 128.0
                  }
                }
              }
            }
          },
          "400": {
            "description": "Product purchase failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product purchase failed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during purchase process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error during purchase process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/products/get-all": {
      "get": {
        "tags": ["Products"],
        "summary": "Retrieve all products",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Products retrieved successfully"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "idProducto": {
                            "type": "integer",
                            "example": 1
                          },
                          "idCategoriaPro": {
                            "type": "integer",
                            "example": 1
                          },
                          "nombreProducto": {
                            "type": "string",
                            "example": "iPhone 13"
                          },
                          "descripcionProducto": {
                            "type": "string",
                            "example": "128GB, Midnight"
                          },
                          "precioProducto": {
                            "type": "number",
                            "format": "float",
                            "example": 79990.0
                          },
                          "disponibilidadProducto": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No products found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during retrieval process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error during retrieval process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/products/remove": {
      "delete": {
        "tags": ["Products"],
        "summary": "Remove a product from an invoice",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idFactura": {
                    "type": "integer",
                    "example": 1
                  },
                  "idProducto": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": ["idFactura", "idProducto"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product removed from invoice successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product removed from invoice successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to remove product from invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to remove product from invoice"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during removal process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error during removal process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/services/remove": {
      "delete": {
        "tags": ["Services"],
        "summary": "Remove a service from an invoice",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idFactura": {
                    "type": "integer",
                    "example": 1
                  },
                  "idServicio": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": ["idFactura", "idServicio"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service removed from invoice successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Service removed from invoice successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to remove service from invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to remove service from invoice"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during removal process",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error during removal process"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/client-portal/charges/client": {
      "get": {
        "tags": ["Billing"],
        "summary": "Get charges for the client",
        "description": "Fetches all charges related to the signed-in client including Facturas and associated contracts.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Charges retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "idFactura": {
                        "type": "integer"
                      },
                      "idCliente": {
                        "type": "integer"
                      },
                      "totalFactura": {
                        "type": "number"
                      },
                      "contratos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "idContrato": {
                              "type": "integer"
                            },
                            "estadoContrato": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error fetching charges"
          }
        }
      }
    },
    "/api/client-portal/checkout/charge": {
      "post": {
        "tags": ["Checkout"],
        "summary": "Create a charge for a payment",
        "description": "This endpoint is used to create a payment charge through Stripe.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 1000,
                    "description": "Amount to be charged in cents."
                  },
                  "source": {
                    "type": "string",
                    "example": "src_abcdefghijk00000000000000",
                    "description": "Token representing payment source (e.g., card)."
                  },
                  "currency": {
                    "type": "string",
                    "default": "usd",
                    "description": "Currency of the charge."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Charge created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "charge": {
                      "$ref": "#/components/schemas/Charge"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create charge"
          }
        }
      }
    },
    "/api/client-portal/checkout/charges": {
      "get": {
        "tags": ["Checkout"],
        "summary": "Get history of payments made by client",
        "description": "Retrieve a list of all payments made by the client through Stripe.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Charges retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Charge"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve charges"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
